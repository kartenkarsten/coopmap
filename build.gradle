plugins {
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'java'
	id 'org.graalvm.buildtools.native' version '0.10.1'
}

group = 'de.ichsagnurweb'
version = 'dev-tag'
sourceCompatibility = '17'

repositories {
	mavenCentral()
	gradlePluginPortal()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql:42.2.10'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// https://mvnrepository.com/artifact/org.springframework/spring-jcl
	implementation 'org.springframework:spring-jcl'


	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
}

test {
	useJUnitPlatform()
}

graalvmNative {
	binaries.all {
		resources.autodetect()
	}
//	binaries {
//		main {
//			javaLauncher = javaToolchains.launcherFor {
//				languageVersion = JavaLanguageVersion.of(17)
//				system.out.println("foobar")
//				system.out.println(JvmVendorSpec.toString())
//				vendor = JvmVendorSpec.matching("GraalVM Community")
//			}
//		}
//	}
}

//tasks.withType(org.graalvm.buildtools.gradle.tasks.BuildNativeImageTask).configureEach {
//	disableToolchainDetection = true
//}

tasks.named("bootBuildImage") {
	imageName.set("ghcr.io/kartenkarsten/${project.name}")
//	publish = true
//	docker {
//		publishRegistry {
//			username = ${{ github.actor }}
//			password = ${{ secrets.GITHUB_TOKEN }}
//		}
//	}
}
